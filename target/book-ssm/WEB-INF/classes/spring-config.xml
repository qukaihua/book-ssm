<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.qu">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
                <property name="config">
                    <bean class="com.google.code.kaptcha.util.Config">
                         <constructor-arg>
                             <props>
                                 <!-- 是否有边框 可选yes 或者 no -->
                                 <prop key="kaptcha.border">yes</prop>
                                 <!-- 边框颜色 -->
                                 <prop key="kaptcha.border.color">105,179,90</prop>
                                 <!-- 验证码文本字符颜色 -->
                                 <prop key="kaptcha.textproducer.font.color">blue</prop>
                                 <!-- 验证码文本字符大小 -->
                                 <prop key="kaptcha.textproducer.font.size">45</prop>
                                 <!-- 验证码图片的宽度 默认200 -->
                                 <prop key="kaptcha.image.width">125</prop>
                                 <!-- 验证码图片的高度 默认50 -->
                                 <prop key="kaptcha.image.height">45</prop>
                                 <!-- 验证码文本字符长度  默认为5 -->
                                 <prop key="kaptcha.textproducer.char.length">4</prop>
                                 <!-- 验证码文本字体样式  默认为new Font("Arial", 1, fontSize), new Font("Courier", 1, fontSize)  -->
                                 <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                             </props>
                         </constructor-arg>
                     </bean>
                 </property>
             </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="jdbc:mysql://192.168.237.143:3506/book?characterEncoding=utf-8"/>
        <property name="username" value="root" />
        <property name="password" value="" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="33" />

        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat,log4j" /> -->
        <property name="filters" value="mergeStat" />
    </bean>

    <!-- mybatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
        <property name="mapperLocations" value="classpath:Mappers/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.qu.dao" />
    </bean>


</beans>